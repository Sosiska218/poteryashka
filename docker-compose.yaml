version: "3.8"

services:
  nginx:
    image: nginx
    container_name: ${APP_NAME}_nginx
    expose:
      - 80/tcp
    ports:
      - 80:80
    restart: always
    volumes:
      - ./docker/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./:/var/www/html:ro
    depends_on:
      - php
      - mysql
      - phpmyadmin
    networks:
      - app_network

  php:
    build:
      context: ./docker
      dockerfile: php.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    container_name: ${APP_NAME}_php
    restart: always
    volumes:
      - ./:/var/www/html
    networks:
      - app_network

  mysql:
    image: mysql
    container_name: ${APP_NAME}_mysql
    expose:
      - 3306/tcp
    ports:
      - 3306:3306
    restart: always
    volumes:
      - ./mysql:/var/lib/mysql
    environment:
      - MYSQL_DATABASE=${DB_DATABASE}
      - MYSQL_USER=${DB_USERNAME}
      - MYSQL_PASSWORD=${DB_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
    networks:
      - app_network

  phpmyadmin:
    image: phpmyadmin
    container_name: ${APP_NAME}_phpmyadmin
    expose:
      - 80/tcp
    ports:
      - 8080:80
    restart: always
    environment:
      - PMA_HOST=mysql
      - PMA_PORT=${DB_PORT}
    depends_on:
      - mysql
    networks:
      - app_network

  npm:
    build:
      context: ./docker
      dockerfile: npm.dockerfile
    container_name: ${APP_NAME}_npm
    volumes:
      - ./:/var/www/html
    ports:
      - 3000:3000
      - 3001:3001
      - 5173:5173
    networks:
      - app_network

networks:
  app_network:
    name: app_network
    driver: bridge
